monitor Kanal20P { 
   
   PrimOderNicht[20] n;  // nicht direkt zugreifbar, dies ist die gemeinsame Ressource  
   int used = 0; // nicht direkt zugreifbar, zaehlt die belegten Kanalplaetze 
   
   condition platzIstFrei with used <20; // nicht direkt zugreifbar, entspricht der Bedingung "used < 20"
   condition datumIstDa with used>0;   // nicht direkt zugreifbar, entspricht der Bedingung "used > 0"
   
   
   void put(int x){
      waitForCondition platzIstFrei;     // Entspannt warten, bis Platz frei.
      (n[used]).set(x);              // Verwende die Monitor-Operation von PrimOderNicht
      used++;
      signal datumIstDa;          // Uebrigens, jetzt ist ein Datum da.
   }
   
   int get(){
      int temp; 
      waitForCondition datumIstDa;        // Entspannt warten, bis Datum da.
      temp = (n[0]).get();            // Verwende die Monitor-Operation von PrimOderNicht
      for (int j=1; j < used; j++){
            (n[j-1]).set((n[j]).get());  // Verwende die Monitor-Operation von PrimOderNicht
      }
      used--;
      signal platzIstFrei;          // Uebrigens, jetzt ist ein Plaetzchen frei.
      unlock guard;
      return temp; 
   }

   int getPrime(){
      int temp; 
      waitForCondition datumIstDa;        // Entspannt warten, bis Datum da.
      temp = (n[0]).getPrime();       // Verwende die Monitor-Operation von PrimOderNicht
      for (int j=1; j < used; j++){
            (n[j-1]).set((n[j]).get());  // Verwende die Monitor-Operation von PrimOderNicht
      }
      used--;
      signal platzIstFrei;          // Uebrigens, jetzt ist ein Plaetzchen frei.
      return temp; 
   }   
}

mainAgent {}